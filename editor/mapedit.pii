// uses the globally defined IC variable

type PMapEdit=^TMapEdit;
     TMapEdit=object(TMouseObject)
       constructor Init(iX,iY:integer);
       destructor Done;
       
       procedure SetMap(iMap:PXMap);
       procedure SetBlock(iValue:integer);

       procedure Draw; virtual;
       procedure OnMouseMove(x,y,buttons:integer); virtual;
       procedure OnMouseLeave(x,y,buttons:integer); virtual;
       procedure OnMouseDown(x,y,buttons:integer); virtual;
       procedure OnMouseUp(x,y,buttons:integer); virtual;
     private
       procedure PutBlock(x,y,block:integer;check:boolean);
       procedure DeleteBlock(x,y:integer;check:boolean);
       procedure CheckDoor(x,y:integer);
       procedure CheckPlayer(x,y:integer);
       procedure PlaceBlock(block,defx,defy:integer);
       fSpriteEngine:PSpriteEngine;
       fBlock:integer;
       fMOver:integer;
       fAlpha:integer;
       fCursor:PImage;
       fMap:PXMap;
       fDown:byte;
     public
       Refresh:boolean;
     end;

var MapEdit:PMapEdit;
     
constructor TMapEdit.Init(iX,iY:integer);
begin
  new(fSpriteEngine,Init);
  SetBounds(iX,iY,iX+639,iY+383);
  fMOver:=-1;
  fAlpha:=0;
  fCursor:=CreateImageWH(32,32);
  bar(fCursor,0,0,31,31,128,128,128);
  fMap:=nil;
  fDown:=0;
end;

destructor TMapEdit.Done;
begin
  DestroyImage(fCursor);
  dispose(fSpriteEngine,Done);
end;

procedure TMapEdit.Draw;
begin
  bar(fLeft,fTop,fRight,fBottom,0,0,0);
  fSpriteEngine^.Draw;
  if fAlpha<128 then
    SDL_SetAlpha(fCursor^.Surface,SDL_SRCALPHA,fAlpha+64)
  else
    SDL_SetAlpha(fCursor^.Surface,SDL_SRCALPHA,320-fAlpha);
  inc(fAlpha,4);
  if fAlpha=256 then fAlpha:=0;
//  putimage(fLeft+(fActive mod 3)*36+2,fTop+(fActive div 3)*36+2,fCursor);
//  if fMOver>-1 then
//    rectangle(fLeft+(fMOver mod 3)*36+1,fTop+(fMOver div 3)*36+1,fLeft+(fMOver mod 3)*36+34,fTop+(fMOver div 3)*36+34,255,255,255);
  if fMOver>-1 then
    putimage(fLeft+(fMOver mod 20)*32,fTop+(fMOver div 20)*32,fCursor);
end;

procedure TMapEdit.OnMouseMove(x,y,buttons:integer);
begin
  fMOver:=(x-fLeft) div 32+((y-fTop) div 32)*20;
  case fDown of
    1:PutBlock(x,y,fBlock,true);
    3:DeleteBlock(x,y,true);
  end;
  Refresh:=fDown<>0;
end;

procedure TMapEdit.OnMouseLeave(x,y,buttons:integer);
begin
  fMOver:=-1;
end;

procedure TMapEdit.OnMouseDown(x,y,buttons:integer);
begin
  fDown:=buttons;
  case fDown of
    1:PutBlock(x,y,fBlock,true);
    3:DeleteBlock(x,y,true);
  end;
  Refresh:=fDown<>0;
end;

procedure TMapEdit.OnMouseUp(x,y,buttons:integer);
begin
  fDown:=0;
end;

procedure TMapEdit.SetMap(iMap:PXMap);
var x,y:integer;b:Byte;
begin
  fSpriteEngine^.DeleteAll;
  fMap:=iMap;
  for y:=0 to 11 do
    for x:=0 to 19 do begin
      b:=fMap^.GetOrigTile(x,y);
      if b<>32 then
        fSpriteEngine^.Add(new(PSprite,Init(x*32+fLeft,y*32+fTop,IC^.Find(chr(b)))),st(x,2,'0')+st(y,2,'0'));
    end;
end;

procedure TMapEdit.SetBlock(iValue:integer);
begin
  fBlock:=iValue;
end;

procedure TMapEdit.DeleteBlock(x,y:integer;check:boolean);
begin
  x:=(x-fLeft) div 32;
  y:=(y-fTop) div 32;
  fSpriteEngine^.Delete(st(x,2,'0')+st(y,2,'0'));
  if (x in [0,19]) or (y in [0,11]) then PutBlock(fLeft+x*32,fTop+y*32,0,check)
                                    else begin
    fMap^.SetOrigTile(x,y,32);
    if check then begin
      CheckDoor(x,y);
      CheckPlayer(x,y);
    end;
  end;
end;

procedure TMapEdit.PutBlock(x,y,block:integer;check:boolean);
begin
  x:=(x-fLeft) div 32;
  y:=(y-fTop) div 32;
  if not(block in [0,2]) and ((x in [0,19]) or (y in [0,11])) then exit;
  fSpriteEngine^.Delete(st(x,2,'0')+st(y,2,'0'));
  fSpriteEngine^.Add(new(PSprite,Init(x*32+fLeft,y*32+fTop,IC^.Find(Block))),st(x,2,'0')+st(y,2,'0'));
  fMap^.SetOrigTile(x,y,ord(IC^.GetName(Block)[1]));
  if check then begin
    CheckDoor(x,y);
    CheckPlayer(x,y);
  end;
end;

procedure TMapEdit.CheckDoor(x,y:integer);
var i,j,c:integer;
begin
  c:=0;
  for i:=0 to 19 do
    for j:=0 to 11 do
      if fMap^.GetOrigTile(i,j)=33 then inc(c);
  if c=1 then exit;
  if c=0 then begin PlaceBlock(2,19,10);exit;end;
  for i:=0 to 19 do
    for j:=0 to 11 do
      if (fMap^.GetOrigTile(i,j)=33) and ((i<>x) or (j<>y)) then DeleteBlock(fLeft+i*32,fTop+j*32,false);
end;

procedure TMapEdit.CheckPlayer(x,y:integer);
var i,j,c:integer;
begin
  c:=0;
  for i:=0 to 19 do
    for j:=0 to 11 do
      if fMap^.GetOrigTile(i,j)=37 then inc(c);
  if c=1 then exit;
  if c=0 then begin PlaceBlock(1,1,1);exit;end;
  for i:=0 to 19 do
    for j:=0 to 11 do
      if (fMap^.GetOrigTile(i,j)=37) and ((i<>x) or (j<>y)) then DeleteBlock(fLeft+i*32,fTop+j*32,false);
end;

procedure TMapEdit.PlaceBlock(block,defx,defy:integer);
var i,j,c:integer;
begin
  c:=0;
  for i:=0 to 19 do
    for j:=0 to 11 do
      if fMap^.GetOrigTile(i,j)=32 then inc(c);
  if c=0 then begin PutBlock(fLeft+defx*32,fTop+defy*32,block,false);exit;end;
  repeat
    i:=random(18)+1;
    j:=random(10)+1;
  until fMap^.GetOrigTile(i,j)=32;
  PutBlock(fLeft+i*32,fTop+j*32,block,false);
end;

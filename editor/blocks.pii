// uses the globally defined IC variable

type PBlocks=^TBlocks;
     TBlocks=object(TMouseObject)
       constructor Init(iX,iY:integer);
       destructor Done;
       procedure Draw; virtual;
       procedure OnMouseMove(x,y,buttons:integer); virtual;
       procedure OnMouseLeave(x,y,buttons:integer); virtual;
       procedure OnClick(x,y,buttons:integer); virtual;
     private
       fSpriteEngine:PSpriteEngine;
       fActive,fMOver:integer;
       fAlpha:integer;
       fCursor:PImage;
     public
       SelectedBlock:integer;
     end;

var Blocks:PBlocks;
     
constructor TBlocks.Init(iX,iY:integer);
var i:integer;
begin
  new(fSpriteEngine,Init);
  SetBounds(iX,iY,iX+107,iY+251);
  fMOver:=-1;
  fActive:=0;
  fAlpha:=0;
  SelectedBlock:=-1;
  fCursor:=CreateImageWH(32,32);
  bar(fCursor,0,0,31,31,128,128,128);
  for i:=0 to 20 do
    fSpriteEngine^.Add(new(PSprite,Init((i mod 3)*36+677,(i div 3)*36+19,IC^.Find(i))),'BL'+st(i,2,'0'));
end;

destructor TBlocks.Done;
begin
  DestroyImage(fCursor);
  dispose(fSpriteEngine,Done);
end;

procedure TBlocks.Draw;
begin
  bar(fLeft,fTop,fRight,fBottom,0,0,0);
  fSpriteEngine^.Draw;
  if fAlpha<128 then
    SDL_SetAlpha(fCursor^.Surface,SDL_SRCALPHA,fAlpha+64)
  else
    SDL_SetAlpha(fCursor^.Surface,SDL_SRCALPHA,320-fAlpha);
  inc(fAlpha,4);
  if fAlpha=256 then fAlpha:=0;
//  putimage(fLeft+(fActive mod 3)*36+2,fTop+(fActive div 3)*36+2,fCursor);
//  if fMOver>-1 then
//    rectangle(fLeft+(fMOver mod 3)*36+1,fTop+(fMOver div 3)*36+1,fLeft+(fMOver mod 3)*36+34,fTop+(fMOver div 3)*36+34,255,255,255);
  if fMOver>-1 then
    putimage(fLeft+(fMOver mod 3)*36+2,fTop+(fMOver div 3)*36+2,fCursor);
  rectangle(fLeft+(fActive mod 3)*36+1,fTop+(fActive div 3)*36+1,fLeft+(fActive mod 3)*36+34,fTop+(fActive div 3)*36+34,255,255,255);
end;

procedure TBlocks.OnMouseMove(x,y,buttons:integer);
begin
  fMOver:=(x-fLeft) div 36+((y-fTop) div 36)*3;
end;

procedure TBlocks.OnMouseLeave(x,y,buttons:integer);
begin
  fMOver:=-1;
end;

procedure TBlocks.OnClick(x,y,buttons:integer);
begin
  fActive:=(x-fLeft) div 36+((y-fTop) div 36)*3;
  SelectedBlock:=fActive;
end;

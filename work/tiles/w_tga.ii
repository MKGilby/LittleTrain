{ TGA file writer V1.00 -- Freeware -- Written by Gilby/MKSZTSZ }

{ Source must be 24 bit true color pixelstream. (RGB) }
{ Output will be 8 bit paletted or 24 bit truecolor file, depending on
 number of different colors in file }

procedure WriteTGA(FileName:string;wi,he:integer;var p;iifdata:longint);
var f:file;s:string;l,i,j:longint;pp:pointer;
    pal:array[0..255,0..2] of byte;pn:word;
    r,g,b:byte;
begin
  if (wi<1) or (he<1) then begin writeln('WTGA: Illegal parameters!');exit;end;
  pp:=@p;
  if pos('.',filename)=0 then filename+='.TGA';
  assign(f,FileName);
  {$I-} rewrite(f,1); {$I+}
  if ioresult<>0 then begin writeln('WTGA: Cannot create output file!');exit;end;
  
  pn:=0;
  i:=0;
  repeat
    r:=byte(pp^);
    g:=byte((pp+1)^);
    b:=byte((pp+2)^);
    inc(pp,3);
    l:=-1;
    for j:=0 to pn-1 do
      if (pal[j,0]=r) and (pal[j,1]=g) and (pal[j,2]=b) then begin
        l:=j;
        break;
      end;
    if (l=-1) and (pn<256) then begin
      pal[pn,0]:=r;
      pal[pn,1]:=g;
      pal[pn,2]:=b;
      inc(pn);
      l:=0;
    end;
    inc(i);
  until (i=wi*he) or (l=-1);
  if l=-1 then begin // True color
    s:=#0#0#2#0#0#0#0#24#0#0#0#0;
    if iifdata<>-1 then s[1]:=#2;
    blockwrite(f,s[1],length(s));
    blockwrite(f,wi,2);
    blockwrite(f,he,2);
    s:=#24#32;
    blockwrite(f,s[1],length(s));
    if iifdata<>-1 then blockwrite(f,iifdata,2);
    blockwrite(f,p,wi*he*3);
  end else begin // Paletted
    s:=#0#1#1#0#0;
    if iifdata<>-1 then s[1]:=#2;
    blockwrite(f,s[1],length(s));
    blockwrite(f,pn,2);
    s:=#24#0#0#0#0;
    blockwrite(f,s[1],length(s));
    blockwrite(f,wi,2);
    blockwrite(f,he,2);
    s:=#8#32;
    blockwrite(f,s[1],length(s));
    if iifdata<>-1 then blockwrite(f,iifdata,2);
    blockwrite(f,pal,pn*3);
    pp:=@p;
    for i:=0 to wi*he-1 do begin
      r:=byte(pp^);
      g:=byte((pp+1)^);
      b:=byte((pp+2)^);
      for j:=0 to pn-1 do
        if (pal[j,0]=r) and (pal[j,1]=g) and (pal[j,2]=b) then begin
          blockwrite(f,j,1);
          break;
        end;
      pp+=3;
    end;
  end;
  close(f);
end;
